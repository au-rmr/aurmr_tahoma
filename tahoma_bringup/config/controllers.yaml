# Settings for ros_control control loop
hardware_control_loop:
   loop_hz: &loop_hz 500

# Settings for ros_control hardware interface
ur_hardware_interface:
   joints: &robot_joints
     - arm_shoulder_pan_joint
     - arm_shoulder_lift_joint
     - arm_elbow_joint
     - arm_wrist_1_joint
     - arm_wrist_2_joint
     - arm_wrist_3_joint

# Publish all joint states ----------------------------------
joint_state_controller:
   type:         joint_state_controller/JointStateController
   publish_rate: *loop_hz

# Publish wrench ----------------------------------
force_torque_sensor_controller:
   type:         force_torque_sensor_controller/ForceTorqueSensorController
   publish_rate: *loop_hz

# Publish speed_scaling factor
speed_scaling_state_controller:
   type:         scaled_controllers/SpeedScalingStateController
   publish_rate: *loop_hz

# Joint Trajectory Controller - position based -------------------------------
# For detailed explanations of parameter see http://wiki.ros.org/joint_trajectory_controller
scaled_pos_joint_traj_controller:
   type: position_controllers/ScaledJointTrajectoryController
   joints: *robot_joints
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.01
      shoulder_pan_joint: {trajectory: 0.2, goal: 0.1}
      shoulder_lift_joint: {trajectory: 0.2, goal: 0.1}
      elbow_joint: {trajectory: 0.2, goal: 0.1}
      wrist_1_joint: {trajectory: 0.2, goal: 0.1}
      wrist_2_joint: {trajectory: 0.2, goal: 0.1}
      wrist_3_joint: {trajectory: 0.2, goal: 0.1}
   stop_trajectory_duration: 0.0
   state_publish_rate: *loop_hz
   action_monitor_rate: 20

pos_joint_traj_controller:
   type: position_controllers/JointTrajectoryController
   joints: *robot_joints
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.05
      shoulder_pan_joint: {trajectory: 0.2, goal: 0.1}
      shoulder_lift_joint: {trajectory: 0.2, goal: 0.1}
      elbow_joint: {trajectory: 0.2, goal: 0.1}
      wrist_1_joint: {trajectory: 0.2, goal: 0.1}
      wrist_2_joint: {trajectory: 0.2, goal: 0.1}
      wrist_3_joint: {trajectory: 0.2, goal: 0.1}
   stop_trajectory_duration: 0.5
   state_publish_rate: *loop_hz
   action_monitor_rate: 20

scaled_vel_joint_traj_controller:
   type: velocity_controllers/ScaledJointTrajectoryController
   joints: *robot_joints
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.01
      shoulder_pan_joint: {trajectory: 0.1, goal: 0.1}
      shoulder_lift_joint: {trajectory: 0.1, goal: 0.1}
      elbow_joint: {trajectory: 0.1, goal: 0.1}
      wrist_1_joint: {trajectory: 0.1, goal: 0.1}
      wrist_2_joint: {trajectory: 0.1, goal: 0.1}
      wrist_3_joint: {trajectory: 0.1, goal: 0.1}
   gains:
      #!!These values have not been optimized!!
      shoulder_pan_joint:  {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      shoulder_lift_joint: {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      elbow_joint:         {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_1_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_2_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_3_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
   # Use a feedforward term to reduce the size of PID gains
   velocity_ff:
      shoulder_pan_joint: 1.0
      shoulder_lift_joint: 1.0
      elbow_joint: 1.0
      wrist_1_joint: 1.0
      wrist_2_joint: 1.0
      wrist_3_joint: 1.0
   stop_trajectory_duration: 0.0
   state_publish_rate: *loop_hz
   action_monitor_rate: 20

vel_joint_traj_controller:
   type: velocity_controllers/JointTrajectoryController
   joints: *robot_joints
   constraints:
      goal_time: 0.6
      stopped_velocity_tolerance: 0.05
      shoulder_pan_joint: {trajectory: 0.1, goal: 0.1}
      shoulder_lift_joint: {trajectory: 0.1, goal: 0.1}
      elbow_joint: {trajectory: 0.1, goal: 0.1}
      wrist_1_joint: {trajectory: 0.1, goal: 0.1}
      wrist_2_joint: {trajectory: 0.1, goal: 0.1}
      wrist_3_joint: {trajectory: 0.1, goal: 0.1}
   gains:
      #!!These values have not been optimized!!
      shoulder_pan_joint:  {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      shoulder_lift_joint: {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      elbow_joint:         {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_1_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_2_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
      wrist_3_joint:       {p: 5.0,  i: 0.05, d: 0.1, i_clamp: 1}
   # Use a feedforward term to reduce the size of PID gains
   velocity_ff:
      shoulder_pan_joint: 1.0
      shoulder_lift_joint: 1.0
      elbow_joint: 1.0
      wrist_1_joint: 1.0
      wrist_2_joint: 1.0
      wrist_3_joint: 1.0
   stop_trajectory_duration: 0.5
   state_publish_rate: *loop_hz
   action_monitor_rate: 20

# Pass an array of joint velocities directly to the joints
joint_group_pos_controller:
   type: position_controllers/JointGroupPositionController
   joints: *robot_joints

# Pass an array of joint velocities directly to the joints
joint_group_vel_controller:
   type: velocity_controllers/JointGroupVelocityController
   joints: *robot_joints

forward_joint_traj_controller:
    type: "pass_through_controllers/JointTrajectoryController"
    joints: *robot_joints

forward_cartesian_traj_controller:
    type: "pass_through_controllers/CartesianTrajectoryController"
    joints: *robot_joints

twist_controller:
  type: "ros_controllers_cartesian/TwistController"
  frame_id: "tool0_controller"
  publish_rate: *loop_hz
  joints: *robot_joints

pose_based_cartesian_traj_controller:
    type: pose_controllers/CartesianTrajectoryController

    # UR driver convention
    base: base
    tip: tool0_controller
    joints: *robot_joints

joint_based_cartesian_traj_controller:
    type: position_controllers/CartesianTrajectoryController

    # UR driver convention
    base: base
    tip: tool0
    joints: *robot_joints

robot_status_controller:
   type: industrial_robot_status_controller/IndustrialRobotStatusController
   handle_name: industrial_robot_status_handle
   publish_rate: 10

ur_cartesian_force_controller:
    type: "position_controllers/CartesianForceController"
    end_effector_link: "arm_tool0"
    robot_base_link: "arm_base_link"
    ft_sensor_ref_link: "arm_tool0"
    joints:
      - arm_shoulder_pan_joint
      - arm_shoulder_lift_joint
      - arm_elbow_joint
      - arm_wrist_1_joint
      - arm_wrist_2_joint
      - arm_wrist_3_joint

    gravity: 9.81

    solver:
        error_scale: 0.025

    pd_gains:
        trans_x: {p: 0.1, d: 0.0}
        trans_y: {p: 0.1, d: 0.0}
        trans_z: {p: 0.1, d: 0.0}
        rot_x: {p: 1.0}
        rot_y: {p: 1.0}
        rot_z: {p: 1.0}


ur_cartesian_compliance_controller:
    type: "position_controllers/CartesianComplianceController"
    end_effector_link: "arm_tool0"
    robot_base_link: "arm_base_link"
    ft_sensor_ref_link: "arm_tool0"
    compliance_ref_link: "arm_tool0"
    target_frame_topic: "target_frame"
    joints:
    - arm_shoulder_pan_joint
    - arm_shoulder_lift_joint
    - arm_elbow_joint
    - arm_wrist_1_joint
    - arm_wrist_2_joint
    - arm_wrist_3_joint

    gravity: 9.81

    stiffness:  # w.r.t. compliance_ref_link coordinates
        trans_x: 100.0
        trans_y: 100.0
        trans_z: 100.0
        rot_x: 5.0
        rot_y: 5.0
        rot_z: 5.0
        max_translation_error_norm: 25
        max_rotation_error_norm: 5.14

    solver:
        error_scale: 0.35
        iterations: 1
        publish_state_feedback: True


    # For all controllers, these gains are w.r.t. the robot_base_link coordinates.
    pd_gains:
        trans_x: {p: 0.1, d: 0.0}
        trans_y: {p: 0.1, d: 0.0}
        trans_z: {p: 0.1, d: 0.0}
        rot_x: {p: 1.5}
        rot_y: {p: 1.5}
        rot_z: {p: 1.5}
