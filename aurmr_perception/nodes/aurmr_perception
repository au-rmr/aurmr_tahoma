#!/usr/bin/env python

import argparse
import rospy
import os
import glob

from aurmr_perception.pod_model import PodPerceptionROS, DiffPodModel

if __name__ == '__main__':
    rospy.init_node('aurmr_perception')

    folders = ['1E', '1H', '1F', '1G', '2E', '2H', '2F', '2G', '3E', '3H', '3F', '3G', '4E', '4H', '4F', '4G', '1D', '2D', '3D', '1C', '2C', '3C']

    for folder in folders:
        path = "/home/aurmr/workspaces/aurmr_demo_perception/src/uois_service_multi_demo/dataset/"
        folder_path = path+folder
        files = glob.glob(f'{folder_path}/*.npy')
        for file in files:
            os.remove(file)
        files = glob.glob(f'{folder_path}/*.png')
        for file in files:
            os.remove(file)
    files = glob.glob(f'{path}/pod/*.png')
    for file in files:
        os.remove(file)

    parser = argparse.ArgumentParser(description='AURMR Perception Module')
    parser.add_argument('-v', '--viz', action='store_true', default=False)
    parser.add_argument('--diff_threshold', type=int, default=140)
    parser.add_argument('--camera_name', default='stand_camera')
    parser.add_argument('--segmentation_method', default='pixel_difference')
    parser.add_argument('--camera', default='realsense')
    args, unknown = parser.parse_known_args()
    args.viz = rospy.get_param("~viz", args.viz)
    args.camera_name = rospy.get_param("~camera_name", args.camera_name)
    args.camera_type = rospy.get_param("~camera_type", args.camera)
    args.segmentation_method = rospy.get_param("~segmentation_method", args.segmentation_method)
    model = DiffPodModel(args.diff_threshold, args.segmentation_method)
    node = PodPerceptionROS(model, args.camera_name, args.viz, args.camera_type)
    while not rospy.is_shutdown() and not node.received_images:
        rospy.logwarn_throttle(10, "Haven't received images yet")
        rospy.sleep(1)
    rospy.loginfo("Perception initialized")
    rospy.spin()
